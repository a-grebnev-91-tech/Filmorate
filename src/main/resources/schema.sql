CREATE TABLE IF NOT EXISTS directors
(
    director_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    director_name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id INTEGER PRIMARY KEY,
    name     VARCHAR(30)
);

CREATE TABLE IF NOT EXISTS mpa_ratings
(
    mpa_id   INTEGER PRIMARY KEY,
    mpa_name VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS films
(
    film_id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(50) NOT NULL,
    description  VARCHAR(200),
    release_date DATE,
    duration     INTEGER,
    rate         INTEGER,
    mpa_id       INTEGER REFERENCES mpa_ratings (mpa_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS films_genres
(
    film_id  BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES genres (genre_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS films_directors
(
    film_id     BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
    director_id INTEGER REFERENCES directors (director_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, director_id)
);

CREATE TABLE IF NOT EXISTS users
(
    user_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    birthdate DATE,
    email     VARCHAR(100) NOT NULL UNIQUE,
    login     VARCHAR(20)  NOT NULL UNIQUE,
    name      VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS events
(
    event_id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id   BIGINT      NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    type      VARCHAR(20) NOT NULL,
    operation VARCHAR(20) NOT NULL,
    timestamp BIGINT      NOT NULL,
    entity_id BIGINT      NOT NULL
);

CREATE TABLE IF NOT EXISTS films_likes
(
    film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
    user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id   BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    friend_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    confirmed BOOLEAN,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS reviews
(
    review_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content     TEXT,
    is_positive BOOLEAN,
    user_id     BIGINT REFERENCES users (user_id) on DELETE cascade,
    film_id     BIGINT REFERENCES films (film_id) on delete cascade,
    useful      INTEGER
);

CREATE TABLE IF NOT EXISTS reviews_likes
(
    review_id BIGINT REFERENCES reviews ON DELETE CASCADE,
    user_id   BIGINT REFERENCES users ON DELETE CASCADE,
    is_like   BOOLEAN,
    PRIMARY KEY (review_id, user_id)
);
